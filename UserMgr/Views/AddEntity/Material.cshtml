@using UserMgr.Models
@model MaterialViewModel

@{
    Layout = "~/Views/Layout/_LayoutIndex.cshtml";
}

<div class="wrapper wrapper-content animated fadeInLef">
        <div class="row">
            <div class="col-sm-12">
                <div class="ibox float-e-margins">
                    <div class="ibox-title">
                        <h5>添加物资</h5>
                    </div>
                    <div class="ibox-content">
                        @using (Html.BeginForm("Material", "AddEntity", FormMethod.Post, new { @class = "form-horizontal m-t-md" }))
                        {
                            <h1>基本属性</h1>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">物资种类</label>
                                <div class="col-sm-10">
                                    @Html.DropDownListFor(m => m.MaterialTypeID, ViewData["MaterialType"] as IEnumerable<SelectListItem>, new { @class = "form-control", @style = "font-size: 13px" })
                                    @Html.ValidationMessage("MaterialTypeID", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">规格代码</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.SizeCode, new { @class = "form-control" })
                                    @Html.ValidationMessage("SizeCode", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">物资型号</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.MaterialModel, new { @class = "form-control" })
                                    @Html.ValidationMessage("MaterialModel", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">描述信息</label>
                                <div class="col-sm-10">
                                    @Html.TextAreaFor(m => m.Detail, new { @class = "form-control" })
                                    @Html.ValidationMessage("Detail", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <h1>物资参数</h1>
                            <p>长宽高，质量都为最小单位，请输入整数，密度自动计算</p>
                            <br>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">长宽高</label>
                                <div class="col-sm-10">
                                    <div class="row">
                                        <div class="col-md-4">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">长</span>
                                                @Html.TextBoxFor(m => m.Length, new { @class = "form-control", type = "number", placeholder = "eg: 30" })
                                                <span class="input-group-addon">mm</span>
                                            </div>
                                            @Html.ValidationMessage("Length", new { @class = "text-danger pull-right" })
                                        </div>
                                        <div class="col-md-4">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">宽</span>
                                                @Html.TextBoxFor(m => m.Width, new { @class = "form-control", type = "number", placeholder = "eg: 40" })
                                                <span class="input-group-addon">mm</span>
                                            </div>
                                            @Html.ValidationMessage("Width", new { @class = "text-danger pull-right" })
                                        </div>
                                        <div class="col-md-4">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">高</span>
                                                @Html.TextBoxFor(m => m.Height, new { @class = "form-control", type = "number", placeholder = "eg: 50" })
                                                <span class="input-group-addon">mm</span>
                                            </div>
                                            @Html.ValidationMessage("Height", new { @class = "text-danger pull-right" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">质量/密度</label>
                                <div class="col-sm-10">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">质量</span>
                                                @Html.TextBoxFor(m => m.Weight, new { @class = "form-control", type = "number", placeholder = "eg: 8000" })
                                                <span class="input-group-addon">g</span>
                                            </div>
                                            @Html.ValidationMessage("Weight", new { @class = "text-danger pull-right" })
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">密度</span>
                                                @Html.TextBoxFor(m => m.MaterialDensity, new { @class = "form-control", @readonly = "", placeholder = "自动计算" })
                                                <span class="input-group-addon">g/mm<sup>3</sup></span>
                                            </div>
                                            @Html.ValidationMessage("MaterialDensity", new { @class = "text-danger pull-right" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">物资单位</label>
                                <div class="col-sm-10">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">常用单位</span>
                                                @Html.DropDownListFor(m => m.Unit, ViewData["Unit"] as IEnumerable<SelectListItem>, new { @class = "form-control", @style = "font-size: 13px" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">手动输入</span>
                                                @Html.TextBoxFor(m => m.UnitInput, new { @class = "form-control", placeholder = "如果常用单位没有所需，可以手动输入" })
                                            </div>
                                            @Html.ValidationMessage("UnitInput", new { @class = "text-danger pull-right" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <h1>小件信息</h1>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">小件计量</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.ParcelMeasure, new { @class = "form-control" })
                                    @Html.ValidationMessage("ParcelMeasure", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">小件单位</label>
                                <div class="col-sm-10">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">常用单位</span>
                                                @Html.DropDownListFor(m => m.ParcelUnit, ViewData["Unit"] as IEnumerable<SelectListItem>, new { @class = "form-control", @style = "font-size: 13px" })
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">手动输入</span>
                                                @Html.TextBoxFor(m => m.ParcelUnitInput, new { @class = "form-control", placeholder = "如果常用单位没有所需，可以手动输入" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="hr-line-dashed"></div>
                            <h1>其他信息</h1>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">物料容器</label>
                                <div class="col-sm-10">
                                    @Html.TextBoxFor(m => m.MaterialContainer, new { @class = "form-control" })
                                    @Html.ValidationMessage("MaterialContainer", new { @class = "text-danger pull-right" })
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-2 control-label">物料范围</label>
                                <div class="col-sm-10">
                                    <div class="row">
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">最小值</span>
                                                @Html.TextBoxFor(m => m.MaterialMin, new { @class = "form-control", placeholder = 0 })
                                            </div>
                                            <span id="ValidateMin" hidden class="text-danger pull-right">最小值应不小于0</span>
                                            @Html.ValidationMessage("MaterialMin", new { @class = "text-danger pull-right" })
                                        </div>
                                        <div class="col-md-6">
                                            <div class="input-group m-b">
                                                <span class="input-group-addon">最大值</span>
                                                @Html.TextBoxFor(m => m.MaterialMax, new { @class = "form-control", placeholder = 0 })
                                            </div>
                                            <span id="ValidateMax" hidden class="text-danger pull-right">最大值不能小于最小值</span>
                                            @Html.ValidationMessage("MaterialMax", new { @class = "text-danger pull-right" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-10 col-sm-offset-2">
                                    @Html.CheckBoxFor(m => m.IsCKDbool)
                                    <label>是否组合商品</label>
                                    @*<div class="checkbox checkbox-circle">
                        <input data-val="true" id="IsCKD" name="IsCKD" type="checkbox" value="true" />
                        <input name="IsCKD" type="hidden" value="false" />
                        <label for="IsCKD">
                            是否组合商品
                        </label>
                    </div>*@
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-sm-8 col-sm-offset-2">
                                    <button class="btn btn-success full-width" type="submit">添加</button>
                                </div>
                                @Html.ValidationMessage("Msg", new { @class = "text-danger" })
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>

